swagger: '2.0'
info:
  title: Chronicler API
  # description: Events something
  version: "1.0.0"
# the domain of the service
host: localhost:8080
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json
consumes:
  - application/json
paths:
  /events:
    get:
      summary: Get all events
      parameters:
        - in: query
          name: id
          description: only events with the given ids
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        200:
         description: A list of all events in the given Chronicle
         schema:
           type: array
           items:
             $ref: '#/definitions/Event'
    post:
      summary: Post a new event without which page, treats to events with the same ID as the same in regards to idempotency
      parameters:
        - in: body
          name: body
          description: Event to add
          required: true
          schema:
            $ref: "#/definitions/EventWithoutPage"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Event'

  /events/{page}/:
    get:
      summary: Get a specific event
      parameters:
        - in: path
          name: page
          description: Chronicle page to insert the event at
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Event'
    put:
      summary: Add a new event at a specific place in the order, treats to events with the same ID as the same in regards to idempotency
      parameters:
        - in: path
          name: page
          description: Chronicle page to insert the event at
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Event to add
          required: true
          schema:
            $ref: "#/definitions/EventWithoutPage"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Event'
        400:
          description: Invalid page or something

definitions:
  Event:
    type: object
    required:
      - id
      - type
      - page
      - data
    properties:
      id:
        type: string
        description: Unique ID of this event, uniqueness/idempotency only takes ID into consideration
      type:
        type: string
        description: Type of event, to enable filtering or ease parsing
      page:
        type: number
        description: Which page in the Chronicle this event has
      data:
        type: string
        description: Actual event data, fill it with whatever you want to store

  EventWithoutPage:
    type: object
    required:
      - id
      - type
      - data
    properties:
      id:
        type: string
        description: Unique ID of this event, uniqueness/idempotency only takes ID into consideration
      type:
        type: string
        description: Type of event, to enable filtering or ease parsing
      data:
        type: string
        description: Actual event data, fill it with whatever you want to store
